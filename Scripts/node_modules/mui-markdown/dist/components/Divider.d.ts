/// <reference types="react" />
import type { DividerProps as MuiDividerProps } from '@mui/material';
export interface DividerProps extends MuiDividerProps {
}
declare const Divider: import("@emotion/styled").StyledComponent<{
    absolute?: boolean | undefined;
    children?: import("react").ReactNode;
    classes?: Partial<import("@mui/material").DividerClasses> | undefined;
    flexItem?: boolean | undefined;
    light?: boolean | undefined;
    orientation?: "vertical" | "horizontal" | undefined;
    sx?: import("@mui/material").SxProps<import("@mui/material").Theme> | undefined;
    textAlign?: "center" | "left" | "right" | undefined;
    variant?: "inset" | "fullWidth" | "middle" | undefined;
} & import("@mui/material/OverridableComponent").CommonProps & Omit<Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLHRElement>, HTMLHRElement>, "ref"> & {
    ref?: ((instance: HTMLHRElement | null) => void) | import("react").RefObject<HTMLHRElement> | null | undefined;
}, keyof import("@mui/material/OverridableComponent").CommonProps | "absolute" | "children" | "flexItem" | "light" | "orientation" | "sx" | "textAlign" | "variant"> & import("@mui/system").MUIStyledCommonProps<import("@mui/material").Theme> & DividerProps, {}, {}>;
export default Divider;
